name: CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

# # Cancel any in-progress job or previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      # # Start Nx Cloud CI Run
      # - name: Start Nx Cloud CI Run
      #   run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js"

      # Setup Node.js (without npm cache to avoid issues)
      - uses: actions/setup-node@v4
        with:
          node-version: 22.17.0

      # Debug environment before install
      - name: Debug environment
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "CI environment variable: $CI"
          echo "GITHUB_ACTIONS: $GITHUB_ACTIONS"
          echo "Current directory: $(pwd)"
          echo "Package.json exists: $(test -f package.json && echo 'yes' || echo 'no')"
          echo "Package-lock.json exists: $(test -f package-lock.json && echo 'yes' || echo 'no')"
          echo "Node modules exists: $(test -d node_modules && echo 'yes' || echo 'no')"
          head -20 package.json

      # Configure npm for maximum speed and bypass strict checks
      - name: Configure npm
        run: |
          echo "Configuring npm for CI speed..."
          npm config set registry https://registry.npmjs.org/
          npm config set fetch-retry-mintimeout 10000
          npm config set fetch-retry-maxtimeout 60000
          npm config set fetch-retries 2
          npm config set maxsockets 20
          npm config set progress false
          npm config set prefer-offline false
          npm config set engine-strict false
          npm config set fund false
          npm config set audit false
          npm config list

      # Install dependencies (most aggressive approach)
      - name: Install dependencies
        run: |
          echo "Starting npm install with full debugging..."
          # Try npm ci first (fastest when it works)
          timeout 300 npm ci --no-audit --no-fund --ignore-engines --verbose || {
            echo "npm ci failed, trying npm install..."
            rm -rf node_modules package-lock.json
            echo "Attempting npm install with all bypass flags..."
            timeout 600 npm install --no-audit --no-fund --ignore-engines --legacy-peer-deps --verbose
          }
        timeout-minutes: 15

      # Configure Nx
      - uses: nrwl/nx-set-shas@v4

      # Check code formatting
      - name: Check code formatting
        run: npx nx format:check

      - name: Run CI Targets
        timeout-minutes: 5
        run: |
          # Run non-test tasks in distributed mode
          npx nx affected -t typecheck,lint,build --parallel=3
          # Run tests without distributed execution to avoid hanging
          NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx affected -t test --parallel=3
          # Run E2E tests sequentially
          npx nx affected -t e2e-ci --parallel=1

      # Stop Nx Cloud agents
      - name: Stop Nx Cloud agents
        if: always()
        run: npx nx-cloud complete-ci-run
