name: CI

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

# # Cancel any in-progress job or previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      # Checkout code
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      # Start Nx Cloud CI Run
      - name: Start Nx Cloud CI Run
        timeout-minutes: 5
        run: |
          echo "üå©Ô∏è Starting Nx Cloud CI run..."
          npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" || echo "Nx Cloud start failed, continuing without distribution"

      # Setup pnpm first
      - uses: pnpm/action-setup@v2
        with:
          version: 10

      # Setup Node.js with pnpm cache
      - uses: actions/setup-node@v4
        with:
          node-version: 22.16.0
          cache: "pnpm"

      # Environment info (optional, can be removed for less noise)
      # - name: Environment info
      #   run: |
      #     node --version
      #     pnpm --version
      #     echo "Registry: $(pnpm config get registry)"
      #     echo "Store location: $(pnpm store path)"

      - name: Install dependencies
        timeout-minutes: 5
        env:
          CI: true
          # Cypress optimizations
          CYPRESS_INSTALL_BINARY: 0
          CYPRESS_RUN_BINARY: 0
          CYPRESS_SKIP_BINARY_INSTALL: true
          CYPRESS_CACHE_FOLDER: ~/.cache/Cypress
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      # Configure Nx
      - uses: nrwl/nx-set-shas@v4



      # Check code formatting
      - name: Check code formatting
        run: npx nx format:check

      - name: Run CI Targets
        timeout-minutes: 10
        env:
          # Cypress skip flags
          CYPRESS_INSTALL_BINARY: 0
          CYPRESS_RUN_BINARY: 0
          CYPRESS_SKIP_BINARY_INSTALL: true
        run: |
          npx nx affected -t typecheck,lint,build --parallel=3
          NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx affected -t test --parallel=3
          npx nx affected -t e2e-ci --parallel=1 || echo "E2E tests failed or skipped"

      # Stop Nx Cloud agents
      - name: Stop Nx Cloud agents
        if: always()
        timeout-minutes: 2
        run: |
          echo "üõë Stopping Nx Cloud agents..."
          npx nx-cloud complete-ci-run || echo "Nx Cloud stop failed or already stopped"
